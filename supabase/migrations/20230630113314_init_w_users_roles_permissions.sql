create table "public"."permissions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "updated_at" timestamp with time zone default now(),
    "name" text
);


create table "public"."roles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "updated_at" timestamp with time zone default now(),
    "name" text
);


create table "public"."roles_permissions_junction" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "role_id" bigint,
    "permission_id" bigint,
    "updated_at" timestamp with time zone
);


create table "public"."user_logs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "user_id" bigint,
    "action" text
);


create table "public"."user_roles_junction" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "updated_at" timestamp with time zone default now(),
    "role_id" bigint,
    "user_id" bigint
);


create table "public"."users" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "auth_provider" text,
    "auth_uuid" uuid,
    "email" text,
    "first_name" text,
    "last_name" text
);


CREATE UNIQUE INDEX permissions_pkey ON public.permissions USING btree (id);

CREATE UNIQUE INDEX roles_permissions_junction_pkey ON public.roles_permissions_junction USING btree (id);

CREATE UNIQUE INDEX roles_pkey ON public.roles USING btree (id);

CREATE UNIQUE INDEX user_logs_pkey ON public.user_logs USING btree (id);

CREATE UNIQUE INDEX user_roles_junction_pkey ON public.user_roles_junction USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

alter table "public"."permissions" add constraint "permissions_pkey" PRIMARY KEY using index "permissions_pkey";

alter table "public"."roles" add constraint "roles_pkey" PRIMARY KEY using index "roles_pkey";

alter table "public"."roles_permissions_junction" add constraint "roles_permissions_junction_pkey" PRIMARY KEY using index "roles_permissions_junction_pkey";

alter table "public"."user_logs" add constraint "user_logs_pkey" PRIMARY KEY using index "user_logs_pkey";

alter table "public"."user_roles_junction" add constraint "user_roles_junction_pkey" PRIMARY KEY using index "user_roles_junction_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."roles_permissions_junction" add constraint "roles_permissions_junction_permission_id_fkey" FOREIGN KEY (permission_id) REFERENCES permissions(id) not valid;

alter table "public"."roles_permissions_junction" validate constraint "roles_permissions_junction_permission_id_fkey";

alter table "public"."roles_permissions_junction" add constraint "roles_permissions_junction_role_id_fkey" FOREIGN KEY (role_id) REFERENCES roles(id) not valid;

alter table "public"."roles_permissions_junction" validate constraint "roles_permissions_junction_role_id_fkey";

alter table "public"."user_logs" add constraint "user_logs_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) not valid;

alter table "public"."user_logs" validate constraint "user_logs_user_id_fkey";

alter table "public"."user_roles_junction" add constraint "user_roles_junction_role_id_fkey" FOREIGN KEY (role_id) REFERENCES roles(id) not valid;

alter table "public"."user_roles_junction" validate constraint "user_roles_junction_role_id_fkey";

alter table "public"."user_roles_junction" add constraint "user_roles_junction_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) not valid;

alter table "public"."user_roles_junction" validate constraint "user_roles_junction_user_id_fkey";


